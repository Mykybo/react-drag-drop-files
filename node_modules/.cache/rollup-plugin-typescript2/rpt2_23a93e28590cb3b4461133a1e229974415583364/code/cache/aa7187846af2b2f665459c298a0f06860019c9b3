{"code":"/**\r\n * Converting the file size to MB\r\n * @param size : Size to be converted;\r\n * @returns number\r\n *\r\n * @internal\r\n */\r\nexport var getFileSizeMB = function (size) {\r\n    return size / 1000 / 1000;\r\n};\r\n/**\r\n *\r\n * Check if the file uploaded is in the type list or not\r\n * @param file - The File uploaded\r\n * @param types - Available types\r\n * @returns boolean\r\n *\r\n * @internal\r\n */\r\nexport var checkType = function (file, types) {\r\n    var extension = file.name.split('.').pop();\r\n    var loweredTypes = types.map(function (type) { return type.toLowerCase(); });\r\n    return loweredTypes.includes(extension.toLowerCase());\r\n};\r\n/**\r\n * Get the files for input \"accept\" attribute\r\n * @param types - Allowed types\r\n * @returns string\r\n *\r\n * @internal\r\n */\r\nexport var acceptedExt = function (types) {\r\n    if (types === undefined)\r\n        return '';\r\n    return types.map(function (type) { return \".\".concat(type.toLowerCase()); }).join(',');\r\n};\r\n//# sourceMappingURL=utils.js.map","references":[],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;GAMG;AACH,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,IAAY;IACxC,OAAO,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAC5B,CAAC,CAAC;AAEF;;;;;;;;GAQG;AACH,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,IAAU,EAAE,KAAoB;IACxD,IAAM,SAAS,GAAW,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAY,CAAC;IAC/D,IAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC7D,OAAO,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACxD,CAAC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,KAAgC;IAC1D,IAAI,KAAK,KAAK,SAAS;QAAE,OAAO,EAAE,CAAC;IACnC,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,WAAI,IAAI,CAAC,WAAW,EAAE,CAAE,EAAxB,CAAwB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjE,CAAC,CAAC\"}","dts":{"name":"/home/mykybo/repository/react-drag-drop-files/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/utils.d.ts","writeByteOrderMark":false,"text":"export {};\r\n"}}
